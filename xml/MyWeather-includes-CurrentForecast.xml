<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="CurrentForecast">

		<control type="group">
			<visible>Container(9000).HasFocus(1)</visible>
			<!-- <include>SettingsFadeEffect</include> -->
			<left>470</left>
			<control type="group">
				<top>0</top>
				<left>0</left>
				<width>1400</width>
				<height>390</height>
				<include content="ItemBorder">
				</include>
				<!-- <control type="image"> -->
				<!-- <top>20</top> -->
				<!-- <left>20</left> -->
				<!-- <right>20</right> -->
				<!-- <height>310</height> -->
				<!-- <texture border="5">overlays/diffuse-overlay.png</texture> -->
				<!-- <visible>Skin.HasSetting(Enable.HighlightFocused)</visible> -->
				<!-- </control> -->
				<control type="grouplist">
					<left>20</left>
					<right>20</right>
					<top>327</top>
					<height>50</height>
					<orientation>horizontal</orientation>
					<control type="label">
						<width>auto</width>
						<font>font13</font>
						<label>$LOCALIZE[31204]</label>
					</control>
					<control type="label">
						<width>auto</width>
						<font>font13</font>
						<label> $LOCALIZE[19107] </label>
						<visible>!String.IsEmpty(Window(weather).Property(Location))</visible>
					</control>
					<control type="label">
						<width>auto</width>
						<font>font13</font>
						<label>$INFO[Window(weather).Property(Location)]</label>
					</control>
				</control>

				<!-- weather icon when weather addon provies remote image -->
				<control type="image">
					<left>40</left>
					<top>40</top>
					<height>270</height>
					<visible>Skin.HasSetting(Enable.RemoteWeatherIcons)</visible>
					<aspectratio scalediffuse="false" align="left" aligny="center">keep</aspectratio>
					<texture background="true">$INFO[Window(weather).Property(Current.RemoteIcon)]</texture>
				</control>
				<!-- weather icon when using only local mapped icons -->
				<control type="multiimage">
					<left>40</left>
					<top>40</top>
					<height>270</height>
					<visible>!Skin.HasSetting(Enable.RemoteWeatherIcons)</visible>
					<aspectratio scalediffuse="false" align="left" aligny="center">keep</aspectratio>
					<imagepath>$VAR[WeatherIconVar]$INFO[Window(weather).Property(Current.FanartCode)]$VAR[WeatherIconExtVar]</imagepath>
					<timeperimage>70</timeperimage>
					<fadetime>1</fadetime>
					<randomize>false</randomize>
				</control>

				<control type="grouplist">
					<top>0</top>
					<left>350</left>
					<orientation>horizontal</orientation>
					<control type="label">
						<description>current temp Value</description>
						<width>auto</width>
						<height>270</height>
						<font>WeatherTempFont</font>
						<label>$INFO[Window(weather).Property(Current.Temperature)]</label>
					</control>
					<control type="label">
						<description>current temp Value Units</description>
						<left>270</left>
						<width>auto</width>
						<height>216</height>
						<font>font16</font>
						<label>$INFO[System.TemperatureUnits]</label>
					</control>
					<control type="label">
						<description>weather alert</description>
						<width>auto</width>
						<left>270</left>
						<height>216</height>
						<font>font16</font>
						<label> [COLOR=Alert]$LOCALIZE[90916][/COLOR]</label>
						<visible>!String.IsEmpty(Window(weather).Property(Alerts.IsFetched))</visible>
					</control>
				</control>

				<control type="label">
					<description>current condition label</description>
					<top>210</top>
					<left>350</left>
					<width>800</width>
					<height>60</height>
					<label>$INFO[Window(weather).Property(Current.Condition)], $LOCALIZE[402] $INFO[Window(weather).Property(Current.FeelsLike)]$INFO[System.TemperatureUnits]</label>
					<scroll>true</scroll>
					<font>font30</font>
				</control>
				<control type="grouplist">
					<left>900</left>
					<top>40</top>
					<width>438</width>
					<itemgap>5</itemgap>
					<control type="label">
						<label>[COLOR=LabelTextColor]$LOCALIZE[405]:[/COLOR] $INFO[Window(weather).Property(Current.Dewpoint)]$INFO[System.TemperatureUnits]</label>
						<width>438</width>
						<height>35</height>
						<align>right</align>
						<font>font14</font>
						<visible>!String.IsEmpty(Window(weather).Property(Current.Dewpoint))</visible>
					</control>
					<control type="label">
						<label>[COLOR=LabelTextColor]$LOCALIZE[406]:[/COLOR] $INFO[Window(weather).Property(Current.Humidity)]</label>
						<width>438</width>
						<height>35</height>
						<align>right</align>
						<font>font14</font>
						<visible>!String.IsEmpty(Window(weather).Property(Current.Humidity))</visible>
					</control>
					<control type="label">
						<label>[COLOR=LabelTextColor]$LOCALIZE[404]:[/COLOR] $INFO[Window(weather).Property(Current.Wind)]</label>
						<width>438</width>
						<height>35</height>
						<align>right</align>
						<font>font14</font>
						<visible>!String.IsEmpty(Window(weather).Property(Current.Wind))</visible>
					</control>
					<control type="label">
						<label>[COLOR=LabelTextColor]$LOCALIZE[33027]:[/COLOR] [LOWERCASE]$INFO[Window(weather).Property(Today.Sunrise)][/LOWERCASE]</label>
						<width>438</width>
						<height>35</height>
						<align>right</align>
						<font>font14</font>
						<visible>!String.IsEmpty(Window(weather).Property(Today.Sunrise))</visible>
					</control>
					<control type="label">
						<label>[COLOR=LabelTextColor]$LOCALIZE[33028]:[/COLOR] [LOWERCASE]$INFO[Window(weather).Property(Today.Sunset)][/LOWERCASE]</label>
						<width>438</width>
						<height>35</height>
						<align>right</align>
						<font>font14</font>
						<visible>!String.IsEmpty(Window(weather).Property(Today.Sunset))</visible>
					</control>
				</control>
			</control>
			<control type="panel" id="300">
				<top>390</top>
				<left>0</left>
				<width>1400</width>
				<height>390</height>
				<onleft>9000</onleft>
				<onright>300</onright>
				<onback>9000</onback>
				<onup>9000</onup>
				<ondown>9000</ondown>
				<onclick>Skin.ToggleSetting(Weather.Zoom.Detailed)</onclick>
				<onfocus>Skin.Reset(Weather.Zoom.Detailed)</onfocus>
				<onunfocus>Skin.Reset(Weather.Zoom.Detailed)</onunfocus>
				<preloaditems>2</preloaditems>
				<viewtype label="21371">list</viewtype>
				<!-- <scrolltime tween="quadratic" easing="out">300</scrolltime> -->
				<orientation>horizontal</orientation>
				<itemlayout height="390" width="350">
					<include content="ItemBorder">

					</include>
					<control type="label">
						<left>20</left>
						<right>20</right>
						<top>327</top>
						<height>50</height>
						<label>$INFO[ListItem.Label]</label>
						<selectedcolor>SelectedColor</selectedcolor>
					</control>
					<control type="multiimage">
						<left>75</left>
						<top>72</top>
						<width>180</width>
						<height>180</height>
						<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
						<imagepath>$INFO[ListItem.Icon]</imagepath>
						<timeperimage>70</timeperimage>
						<fadetime>1</fadetime>
						<randomize>false</randomize>
					</control>
					<control type="label">
						<top>20</top>
						<left>20</left>
						<width>310</width>
						<height>60</height>
						<font>font15</font>
						<align>center</align>
						<selectedcolor>SelectedColor</selectedcolor>
						<label>$INFO[ListItem.Label2]</label>
					</control>
					<control type="label">
						<top>250</top>
						<left>20</left>
						<width>310</width>
						<height>60</height>
						<font>font15</font>
						<align>center</align>
						<selectedcolor>SelectedColor</selectedcolor>
						<label>$INFO[ListItem.Property(HighTemperature),[COLOR=HighTemp],[/COLOR]]$INFO[ListItem.Property(LowTemperature), [COLOR=LowTemp],[/COLOR]]</label>
					</control>
					<control type="image">
						<top>20</top>
						<left>20</left>
						<right>20</right>
						<height>310</height>
						<texture border="5">overlays/diffuse-overlay.png</texture>
						<visible>Skin.HasSetting(Enable.HighlightFocused)</visible>
					</control>
				</itemlayout>

				<focusedlayout height="390" width="350">
					<control type="button" id="3062">
						<visible>false</visible>
						<description>Dummy object to catch focus so we can clear property</description>
						<onfocus>Skin.Reset(Weather.Zoom.Detailed)</onfocus>
						<onunfocus>Skin.Reset(Weather.Zoom.Detailed)</onunfocus>
					</control>

					<include content="ItemFocusBorder">
					</include>
					<control type="label">
						<left>20</left>
						<right>20</right>
						<top>327</top>
						<height>50</height>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<control type="multiimage">
						<left>75</left>
						<top>72</top>
						<width>180</width>
						<height>180</height>
						<aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
						<imagepath>$INFO[ListItem.Icon]</imagepath>
						<timeperimage>70</timeperimage>
						<fadetime>1</fadetime>
						<randomize>false</randomize>
					</control>
					<control type="label">
						<top>20</top>
						<left>20</left>
						<width>310</width>
						<height>60</height>
						<font>font15</font>
						<align>center</align>
						<label>$INFO[ListItem.Label2]</label>
					</control>
					<control type="label">
						<top>250</top>
						<left>20</left>
						<width>310</width>
						<height>60</height>
						<font>font15</font>
						<align>center</align>
						<label>$INFO[ListItem.Property(HighTemperature),[COLOR=HighTemp],[/COLOR]]$INFO[ListItem.Property(LowTemperature), [COLOR=LowTemp],[/COLOR]]</label>
					</control>
				</focusedlayout>
				<content>
					<!-- try to get Daily info, but if that is not available, fetch Day info as a backup -->
					<item>
						<label>$LOCALIZE[31909]</label>
						<icon />
						<visible>String.IsEmpty(Window.Property(Daily.IsFetched))</visible>
					</item>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="1" />
					</include>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="2" />
					</include>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="3" />
					</include>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="4" />
					</include>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="5" />
					</include>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="6" />
					</include>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="7" />
					</include>
					<include content="weather-daily-item" condition="!String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="8" />
					</include>


					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="0" />
					</include>
					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="1" />
					</include>
					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="2" />
					</include>
					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="3" />
					</include>
					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="4" />
					</include>
					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="5" />
					</include>
					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="6" />
					</include>
					<include content="weather-day-item" condition="String.IsEmpty(Window.Property(Daily.IsFetched))">
						<param name="index" value="7" />
					</include>

				</content>

			</control>
		</control>
	</include>
</includes>
