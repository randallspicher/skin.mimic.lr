<?xml version="1.0" encoding="UTF-8"?>
<includes>

<include name="weather-alert-item">
	<param name="index"/>
	<definition>
	<item>
		<label>$INFO[Window(weather).Property(Alerts.$PARAM[index].event)]</label>
		<label2>$INFO[Window(weather).Property(Alerts.$PARAM[index].headline)]</label2>
		<property name="description">$INFO[Window(weather).Property(Alerts.$PARAM[index].description)]</property>
		<property name="instruction">$INFO[Window(weather).Property(Alerts.$PARAM[index].instruction)]</property>
		<visible>!String.IsEmpty(Window(weather).Property(Alerts.$PARAM[index].event))</visible>
	</item>
	</definition>
</include>


<include name="weather-daily-item">
	<param name="index"/>
	<definition>
	<item>
		<label>$INFO[Window(weather).Property(Daily.$PARAM[index].LongDay)] ($INFO[Window(weather).Property(Daily.$PARAM[index].ShortDate)])</label>
		<label2>$INFO[Window(weather).Property(Daily.$PARAM[index].ShortOutlook)]</label2>
		<icon>$INFO[Window(weather).Property(Daily.$PARAM[index].RemoteIcon)]</icon>
		<property name="DetailedOutlook">$INFO[Window(weather).Property(Daily.$PARAM[index].Outlook)]</property>
		<property name="HighTemperature">$INFO[Window(weather).Property(Daily.$PARAM[index].HighTemperature)]</property>
		<property name="LowTemperature">$INFO[Window(weather).Property(Daily.$PARAM[index].LowTemperature)]</property>
		<property name="Precipitation">$INFO[Window(weather).Property(Daily.$PARAM[index].Precipitation)]</property>
		<property name="WindSpeed">$INFO[Window(weather).Property(Daily.$PARAM[index].WindSpeed)]</property>
		<property name="WindDirection">$INFO[Window(weather).Property(Daily.$PARAM[index].WindDirection)]</property>
		<visible>Skin.HasSetting(Enable.RemoteWeatherIcons) + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[index].LongDay))</visible>
	</item>
	<item>
		<label>$INFO[Window(weather).Property(Daily.$PARAM[index].LongDay)] $INFO[Window(weather).Property(Daily.$PARAM[index].ShortDate)]</label>
		<label2>$INFO[Window(weather).Property(Daily.$PARAM[index].ShortOutlook)]</label2>
		<icon>$VAR[WeatherIconVar]$INFO[Window(weather).Property(Daily.$PARAM[index].FanartCode),,.png]</icon>
		<property name="DetailedOutlook">$INFO[Window(weather).Property(Daily.$PARAM[index].Outlook)]</property>
		<property name="HighTemperature">$INFO[Window(weather).Property(Daily.$PARAM[index].HighTemperature)]</property>
		<property name="LowTemperature">$INFO[Window(weather).Property(Daily.$PARAM[index].LowTemperature)]</property>
		<property name="Precipitation">$INFO[Window(weather).Property(Daily.$PARAM[index].Precipitation)]</property>
		<property name="WindSpeed">$INFO[Window(weather).Property(Daily.$PARAM[index].WindSpeed)]</property>
		<property name="WindDirection">$INFO[Window(weather).Property(Daily.$PARAM[index].WindDirection)]</property>
		<visible>!Skin.HasSetting(Enable.RemoteWeatherIcons) + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[index].LongDay))</visible>
	</item>
	</definition>
</include>

<include name="weather-day-item">
	<param name="index"/>
	<definition>
	<item>
		<label>$INFO[Window(weather).Property(Day$PARAM[index].Title)]</label>
		<label2>$INFO[Window(weather).Property(Day$PARAM[index].Outlook)]</label2>
		<icon>$INFO[Window(weather).Property(Day$PARAM[index].RemoteIcon)]</icon>
		<property name="HighTemperature">$INFO[Window(weather).Property(Day$PARAM[index].HighTemp)]</property>
		<property name="LowTemperature">$INFO[Window(weather).Property(Day$PARAM[index].LowTemp)]</property>
		<property name="Precipitation">$INFO[Window(weather).Property(Day$PARAM[index].Precipitation)]</property>
		<property name="WindSpeed">$INFO[Window(weather).Property(Day$PARAM[index].WindSpeed)]</property>
		<property name="WindDirection">$INFO[Window(weather).Property(Day$PARAM[index].WindDirection)]</property>
		<visible>Skin.HasSetting(Enable.RemoteWeatherIcons) + !String.IsEmpty(Window(weather).Property(Day$PARAM[index].Title))</visible>
	</item>
	<item>
		<label>$INFO[Window(weather).Property(Day$PARAM[index].Title)]</label>
		<label2>$INFO[Window(weather).Property(Day$PARAM[index].Outlook)]</label2>
		<icon>$VAR[WeatherIconVar]$INFO[Window(weather).Property(Day$PARAM[index].FanartCode),,.png]</icon>
		<property name="HighTemperature">$INFO[Window(weather).Property(Day$PARAM[index].HighTemp)]</property>
		<property name="LowTemperature">$INFO[Window(weather).Property(Day$PARAM[index].LowTemp)]</property>
		<property name="Precipitation">$INFO[Window(weather).Property(Day$PARAM[index].Precipitation)]</property>
		<property name="WindSpeed">$INFO[Window(weather).Property(Day$PARAM[index].WindSpeed)]</property>
		<property name="WindDirection">$INFO[Window(weather).Property(Day$PARAM[index].WindDirection)]</property>
		<visible>!Skin.HasSetting(Enable.RemoteWeatherIcons) + !String.IsEmpty(Window(weather).Property(Day$PARAM[index].Title))</visible>
	</item>
	</definition>
</include>

<include name="weather-hour-item">
	<param name="index"/>
	<definition>
		<item>
			<label>$INFO[Window(weather).Property(Hourly.$PARAM[index].Time)]</label>
			<icon>$INFO[Window(weather).Property(Hourly.$PARAM[index].RemoteIcon)]</icon>
			<property name="ShortDate">$INFO[Window(weather).Property(Hourly.$PARAM[index].ShortDate)]</property>
			<property name="Temperature">$INFO[Window(weather).Property(Hourly.$PARAM[index].Temperature)]</property>
			<property name="FeelsLike">$INFO[Window(weather).Property(Hourly.$PARAM[index].FeelsLike)]</property>
			<property name="Precipitation">$INFO[Window(weather).Property(Hourly.$PARAM[index].Precipitation)]</property>
			<property name="WindSpeed">$INFO[Window(weather).Property(Hourly.$PARAM[index].WindSpeed)]</property>
			<property name="WindDirection">$INFO[Window(weather).Property(Hourly.$PARAM[index].WindDirection)]</property>
			<property name="Humidity">$INFO[Window(weather).Property(Hourly.$PARAM[index].Humidity)]</property>
			<property name="UVIndex">$INFO[Window(weather).Property(Hourly.$PARAM[index].UVIndex)]</property>
			<property name="ChancePrecipitation">$INFO[Window(weather).Property(Hourly.$PARAM[index].ChancePrecipitation)]</property>
			<property name="Snow">$INFO[Window(weather).Property(Hourly.$PARAM[index].Snow)]</property>
			<property name="HeatIndex">$INFO[Window(weather).Property(Hourly.$PARAM[index].HeatIndex)]</property>
			<property name="WindChill">$INFO[Window(weather).Property(Hourly.$PARAM[index].WindChill)]</property>
			<label2>$INFO[Window(weather).Property(Hourly.$PARAM[index].Outlook)]</label2>
			<visible>Skin.HasSetting(Enable.RemoteWeatherIcons) + !String.IsEmpty(Window(weather).Property(Hourly.$PARAM[index].Temperature))</visible>
		</item>
		<item>
			<label>$INFO[Window(weather).Property(Hourly.$PARAM[index].Time)]</label>
            <icon>$VAR[WeatherIconVar]$INFO[Window(weather).Property(Hourly.$PARAM[index].FanartCode),,.png]</icon>
			<property name="ShortDate">$INFO[Window(weather).Property(Hourly.$PARAM[index].ShortDate)]</property>
            <property name="Temperature">$INFO[Window(weather).Property(Hourly.$PARAM[index].Temperature)]</property>
			<property name="FeelsLike">$INFO[Window(weather).Property(Hourly.$PARAM[index].FeelsLike)]</property>
			<property name="Precipitation">$INFO[Window(weather).Property(Hourly.$PARAM[index].Precipitation)]</property>
			<property name="WindSpeed">$INFO[Window(weather).Property(Hourly.$PARAM[index].WindSpeed)]</property>
			<property name="WindDirection">$INFO[Window(weather).Property(Hourly.$PARAM[index].WindDirection)]</property>
			<property name="Humidity">$INFO[Window(weather).Property(Hourly.$PARAM[index].Humidity)]</property>
			<property name="UVIndex">$INFO[Window(weather).Property(Hourly.$PARAM[index].UVIndex)]</property>
			<property name="ChancePrecipitation">$INFO[Window(weather).Property(Hourly.$PARAM[index].ChancePrecipitation)]</property>
			<property name="Snow">$INFO[Window(weather).Property(Hourly.$PARAM[index].Snow)]</property>
			<property name="HeatIndex">$INFO[Window(weather).Property(Hourly.$PARAM[index].HeatIndex)]</property>
			<property name="WindChill">$INFO[Window(weather).Property(Hourly.$PARAM[index].WindChill)]</property>
			<label2>$INFO[Window(weather).Property(Hourly.$PARAM[index].Outlook)]</label2>
			<visible>!Skin.HasSetting(Enable.RemoteWeatherIcons) + !String.IsEmpty(Window(weather).Property(Hourly.$PARAM[index].Temperature))</visible>
		</item>
	</definition>
</include>

    <include name="WeatherWidgetContents">
        <visible>String.IsEqual(Container(9000).ListItem.Property(widget),weather) + !IsEmpty(Weather.Plugin)</visible>
        <top>390</top>
        <left>$PARAM[left]</left>
        <width>$PARAM[width]</width>
        <height>390</height>
        <onleft>9000</onleft>
        <onright>$PARAM[id]</onright>
        <onback>9000</onback>
        <onup>9000</onup>
        <ondown>9000</ondown>
        <onclick>ActivateWindow(weather)</onclick>
        <preloaditems>2</preloaditems>
        <viewtype label="21371">list</viewtype>
<!--         <scrolltime tween="quadratic" easing="out">300</scrolltime> -->
        <orientation>horizontal</orientation>

        <itemlayout height="390" width="350">
					<include content="ItemBorder">
						
					</include>
            <control type="label">
                <left>20</left>
                <right>20</right>
                <top>327</top>
                <height>50</height>
                <label>$INFO[ListItem.Label]</label>
            </control>
            <control type="image">
                <left>75</left>
                <top>72</top>
                <right>75</right>
                <height>180</height>
                <aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
                <texture background="true" fallback="DefaultFolder.png" diffuse="diffuse/thumbnail.png">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
                <top>20</top>
                <left>20</left>
                <width>310</width>
                <height>60</height>
                <font>font15</font>
                <align>center</align>
                <selectedcolor>SelectedColor</selectedcolor>
                <label>$INFO[ListItem.Label2]</label>
            </control>
            <control type="label">
                <top>250</top>
                <left>20</left>
                <width>310</width>
                <height>60</height>
                <font>font15</font>
                <align>center</align>
                <selectedcolor>SelectedColor</selectedcolor>
                <label>$INFO[ListItem.Property(HighTemperature),[COLOR=HighTemp],[/COLOR]]$INFO[ListItem.Property(LowTemperature),  [COLOR=LowTemp],[/COLOR]]</label>
            </control>
            <control type="image">
                <top>20</top>
                <left>20</left>
                <right>20</right>
                <height>310</height>
                <texture border="5">overlays/diffuse-overlay.png</texture>
   						<visible>Skin.HasSetting(Enable.HighlightFocused)</visible>
            </control>
        </itemlayout>

        <focusedlayout height="390" width="350">
					<include content="ItemFocusBorder">
						
					</include>
            
            <control type="label">
                <left>20</left>
                <right>20</right>
                <top>327</top>
                <height>50</height>
                <label>$INFO[ListItem.Label]</label>
            </control>
            <control type="image">
                <left>75</left>
                <top>72</top>
                <right>75</right>
                <height>180</height>
                <aspectratio scalediffuse="false" align="center" aligny="center">keep</aspectratio>
                <texture background="true" fallback="DefaultFolder.png" diffuse="diffuse/thumbnail.png">$INFO[ListItem.Icon]</texture>
            </control>
            <control type="label">
                <top>20</top>
                <left>20</left>
                <width>310</width>
                <height>60</height>
                <font>font15</font>
                <align>center</align>
                <label>$INFO[ListItem.Label2]</label>
            </control>
            <control type="label">
                <top>250</top>
                <left>20</left>
                <width>310</width>
                <height>60</height>
                <font>font15</font>
                <align>center</align>
                <label>$INFO[ListItem.Property(HighTemperature),[COLOR=HighTemp],[/COLOR]]$INFO[ListItem.Property(LowTemperature), [COLOR=LowTemp],[/COLOR]]</label>
            </control>
        </focusedlayout>
				<content>
					<!-- try to get Daily info, but if that is not available, fetch Day info as a backup -->
				
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="1" />
					</include>
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="2" />
					</include>
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="3" />
					</include>
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="4" />
					</include>
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="5" />
					</include>
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="6" />
					</include>
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="7" />
					</include>
					<include content="weather-daily-item"
						condition="!String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="8" />
					</include>


					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="0" />
				    </include>
					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
							<param name="index" value="1" />
					</include>
					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="2" />
					</include>
					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="3" />
					</include>
					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="4" />
					</include>
					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="5" />
					</include>
					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="6" />
					</include>
					<include content="weather-day-item"
						condition="String.IsEmpty(Window(weather).Property(Daily.IsFetched))">
						<param name="index" value="7" />
					</include>




				</content>
    </include>
   


</includes>


