<?xml version="1.0" encoding="UTF-8"?>

<includes>

	<!-- List -->
	<include name="View_50_List">
		<control type="group">
			<visible>Control.IsVisible(50) + !$EXP[isInfoDialog]</visible>
			<include>Animation.Common</include>
			<control type="group">
				<left>90</left>
				<top>-30</top>
				<animation effect="slide" start="0,0" end="0,15" time="0" tween="cubic" easing="inout"
					condition="Window.IsActive(addonbrowser) | Window.IsActive(programs) | $EXP[PluginAdvancedLauncher]">Conditional</animation>
				<control type="group">
					<visible>Integer.IsGreater(Container(50).NumItems,0) + !Skin.HasSetting(Enable.SlimList) + !Skin.HasSetting(Enable.WideList) + !Skin.HasSetting(Enable.2ColumnList)</visible>
					<control type="image">
						<top>195</top>
						<width>1030</width>
						<height>120</height>
						<visible>Control.HasFocus(50)</visible>
						<animation effect="fade" time="320" delay="200">Visible</animation>
						<animation effect="fade" time="50">Hidden</animation>
						<texture colordiffuse="highlight" border="5">listselect_fo.png</texture>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,5)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,4)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,3)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,2)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,1)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,0)">Conditional</animation>
					</control>
				</control>
				<control type="group">
					<visible>Integer.IsGreater(Container(50).NumItems,0) + Skin.HasSetting(Enable.2ColumnList) + !Skin.HasSetting(Enable.SlimList)</visible>
					<control type="image">
						<top>195</top>
						<width>870</width>
						<height>120</height>
						<visible>Control.HasFocus(50)</visible>
						<animation effect="fade" time="320" delay="200">Visible</animation>
						<animation effect="fade" time="50">Hidden</animation>
						<texture colordiffuse="highlight" border="5">listselect_fo.png</texture>
						<animation effect="slide" end="870,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Column,0)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,5)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,4)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,3)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,2)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,1)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,0)">Conditional</animation>
					</control>
				</control>
				<control type="group">
					<visible>Integer.IsGreater(Container(50).NumItems,0) + !Skin.HasSetting(Enable.SlimList) + Skin.HasSetting(Enable.WideList) + !Skin.HasSetting(Enable.2ColumnList)</visible>
					<control type="image">
						<top>195</top>
						<width>1740</width>
						<height>120</height>
						<visible>Control.HasFocus(50)</visible>
						<animation effect="fade" time="320" delay="200">Visible</animation>
						<animation effect="fade" time="50">Hidden</animation>
						<texture colordiffuse="highlight" border="5">listselect_fo.png</texture>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,5)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,4)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,3)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,2)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,1)">Conditional</animation>
						<animation effect="slide" end="0,120" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,0)">Conditional</animation>
					</control>
				</control>
				<control type="group">
					<visible>Integer.IsGreater(Container(50).NumItems,0) + Skin.HasSetting(Enable.SlimList) + !Skin.HasSetting(Enable.WideList) + !Skin.HasSetting(Enable.2ColumnList)</visible>
					<control type="image">
						<top>195</top>
						<width>1050</width>
						<height>60</height>
						<visible>Control.HasFocus(50)</visible>
						<animation effect="fade" time="320" delay="200">Visible</animation>
						<animation effect="fade" time="50">Hidden</animation>
						<texture colordiffuse="highlight" border="5">listselect_fo.png</texture>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,12)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,11)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,10)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,9)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,8)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,7)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,6)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,5)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,4)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,3)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,2)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,1)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,0)">Conditional</animation>
					</control>
				</control>
				<control type="group">
					<visible>Integer.IsGreater(Container(50).NumItems,0) + Skin.HasSetting(Enable.SlimList) + Skin.HasSetting(Enable.WideList) + !Skin.HasSetting(Enable.2ColumnList)</visible>
					<control type="image">
						<top>195</top>
						<width>1740</width>
						<height>60</height>
						<visible>Control.HasFocus(50)</visible>
						<animation effect="fade" time="320" delay="200">Visible</animation>
						<animation effect="fade" time="50">Hidden</animation>
						<texture colordiffuse="highlight" border="5">listselect_fo.png</texture>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,12)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,11)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,10)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,9)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,8)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,7)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,6)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,5)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,4)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,3)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,2)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,1)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,0)">Conditional</animation>
					</control>
				</control>
				<control type="group">
					<visible>Integer.IsGreater(Container(50).NumItems,0) + Skin.HasSetting(Enable.SlimList) + !Skin.HasSetting(Enable.WideList) + Skin.HasSetting(Enable.2ColumnList)</visible>
					<control type="image">
						<top>195</top>
						<width>870</width>
						<height>60</height>
						<visible>Control.HasFocus(50)</visible>
						<animation effect="fade" time="320" delay="200">Visible</animation>
						<animation effect="fade" time="50">Hidden</animation>
						<texture colordiffuse="highlight" border="5">listselect_fo.png</texture>
						<animation effect="slide" end="870,0" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Column,0)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,12)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,11)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,10)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,9)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,8)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,7)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,6)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,5)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,4)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,3)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,2)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,1)">Conditional</animation>
						<animation effect="slide" end="0,60" time="300" tween="cubic" easing="inout" condition="Integer.IsGreater(Container(50).Row,0)">Conditional</animation>
					</control>
				</control>
				<control type="panel" id="50">
					<left>0</left>
					<top>195</top>
					<width>1740</width>
					<height>840</height>
					<onleft>SetProperty(MediaMenu,True,home)</onleft>
					<onleft>SetFocus(9050)</onleft>
					<onright condition="Container(50).HasNext | Container(50).HasPrevious">60</onright>
					<onup>50</onup>
					<ondown>50</ondown>
					<oninfo condition="$EXP[PluginAdvancedLauncher] + System.HasAddon(script.toolbox)">RunScript(script.toolbox,info=textviewer,header='"$INFO[ListItem.Label]"',text='"$VAR[AdvancedLauncherPlotVar]"')</oninfo>
					<oninfo condition="System.HasAddon(script.extendedinfo) + Container.Content(actors)">RunScript(script.extendedinfo,info=extendedactorinfo,name=$INFO[ListItem.Label])</oninfo>
					<viewtype label="535">list</viewtype>
					<pagecontrol>60</pagecontrol>
					<preloaditems>2</preloaditems>
					<scrolltime tween="quadratic" easing="out">200</scrolltime>
					<itemlayout height="120" width="1030" condition="!Skin.HasSetting(Enable.2ColumnList) + !Skin.HasSetting(Enable.SlimList) + !Skin.HasSetting(Enable.WideList)">
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + !Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFolder.png">$VAR[ListIcon]</texture>
						</control>
						<!-- Fix for default icons not showing up for addons that don't have one -->
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + Container.Content(addons)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>

						<include content="external-genre-icon">
							<param name="left" value="10" />
							<param name="top" value="10" />
							<param name="width" value="100" />
							<param name="height" value="100" />
						</include>


						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>135</left>
							<top>3</top>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>170</left>
							<top>3</top>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>135</left>
							<top>52</top>
							<right>80</right>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<right>80</right>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="961" />
							<!-- <param name="OverlayListLeft" value="1081" /> -->
							<param name="OverlayListTop" value="27" />
						</include>
					</itemlayout>
					<focusedlayout height="120" width="1030" condition="!Skin.HasSetting(Enable.2ColumnList) + !Skin.HasSetting(Enable.SlimList) + !Skin.HasSetting(Enable.WideList)">
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + !Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png" fallback="DefaultFolder.png">$VAR[ListIcon]</texture>
						</control>
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + Container.Content(addons)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<include content="external-genre-icon">
							<param name="left" value="10" />
							<param name="top" value="10" />
							<param name="width" value="100" />
							<param name="height" value="100" />
						</include>

						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<top>3</top>
							<left>135</left>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<top>3</top>
							<left>170</left>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>135</left>
							<top>52</top>
							<right>80</right>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<right>80</right>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="961" />
							<param name="OverlayListTop" value="27" />
						</include>
					</focusedlayout>
					<itemlayout height="120" width="1740" condition="!Skin.HasSetting(Enable.2ColumnList) + !Skin.HasSetting(Enable.SlimList) + Skin.HasSetting(Enable.WideList)">
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + !Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + Container.Content(addons)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>

						<include content="external-genre-icon">
							<param name="left" value="10" />
							<param name="top" value="10" />
							<param name="width" value="100" />
							<param name="height" value="100" />
						</include>

						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>135</left>
							<top>3</top>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>170</left>
							<top>3</top>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>135</left>
							<top>52</top>
							<right>80</right>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<right>80</right>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="1671" />
							<param name="OverlayListTop" value="28" />
						</include>
					</itemlayout>
					<focusedlayout height="120" width="1740" condition="!Skin.HasSetting(Enable.2ColumnList) + !Skin.HasSetting(Enable.SlimList) + Skin.HasSetting(Enable.WideList)">
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + !Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + Container.Content(addons)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<include content="external-genre-icon">
							<param name="left" value="10" />
							<param name="top" value="10" />
							<param name="width" value="100" />
							<param name="height" value="100" />
						</include>
						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<top>3</top>
							<left>135</left>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<top>3</top>
							<left>170</left>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>135</left>
							<top>52</top>
							<right>80</right>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<control type="label">
							<right>80</right>
							<height>116</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="1671" />
							<param name="OverlayListTop" value="28" />
						</include>
					</focusedlayout>
					<itemlayout height="60" width="1030" condition="!Skin.HasSetting(Enable.2ColumnList) + Skin.HasSetting(Enable.SlimList) + !Skin.HasSetting(Enable.WideList)">
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>20</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>55</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="961" />
							<param name="OverlayListTop" value="0" />
						</include>
					</itemlayout>
					<focusedlayout height="60" width="1030" condition="!Skin.HasSetting(Enable.2ColumnList) + Skin.HasSetting(Enable.SlimList) + !Skin.HasSetting(Enable.WideList)">
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>20</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>55</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="961" />
							<param name="OverlayListTop" value="0" />
						</include>
					</focusedlayout>
					<itemlayout height="60" width="1740" condition="!Skin.HasSetting(Enable.2ColumnList) + Skin.HasSetting(Enable.SlimList) + Skin.HasSetting(Enable.WideList)">
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>20</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>55</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="1671" />
							<param name="OverlayListTop" value="0" />
						</include>
					</itemlayout>
					<focusedlayout height="60" width="1740" condition="!Skin.HasSetting(Enable.2ColumnList) + Skin.HasSetting(Enable.SlimList) + Skin.HasSetting(Enable.WideList)">
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>20</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>55</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<align>right</align>
							<label>$VAR[ListRightLabel]</label>
							<animation effect="slide" time="0" end="60" condition="Container.Content(addons) | Container.Content(songs)">Conditional</animation>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="1671" />
							<param name="OverlayListTop" value="0" />
						</include>
					</focusedlayout>
					<itemlayout height="120" width="870" condition="Skin.HasSetting(Enable.2ColumnList) + !Skin.HasSetting(Enable.SlimList)">
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + !Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<!-- Fix for default icons not showing up for addons that don't have one -->
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + Container.Content(addons)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<include content="external-genre-icon">
							<param name="left" value="10" />
							<param name="top" value="10" />
							<param name="width" value="100" />
							<param name="height" value="100" />
						</include>
						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>135</left>
							<top>3</top>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>170</left>
							<top>3</top>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>135</left>
							<top>52</top>
							<right>80</right>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="800" />
							<param name="OverlayListTop" value="28" />
						</include>
					</itemlayout>
					<focusedlayout height="120" width="870" condition="Skin.HasSetting(Enable.2ColumnList) + !Skin.HasSetting(Enable.SlimList)">
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + !Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<control type="image">
							<visible>!$EXP[externalGenreIcon]+!String.IsEqual(Container.SortMethod,$LOCALIZE[13409]) + Container.Content(addons)</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<aspectratio scalediffuse="false">keep</aspectratio>
							<texture background="true" diffuse="diffuse/list-icon.png">$VAR[ListIcon]</texture>
						</control>
						<include content="external-genre-icon">
							<param name="left" value="10" />
							<param name="top" value="10" />
							<param name="width" value="100" />
							<param name="height" value="100" />
						</include>
						<control type="label">
							<visible>String.IsEqual(Container.SortMethod,$LOCALIZE[13409])</visible>
							<left>10</left>
							<top>10</top>
							<width>100</width>
							<height>100</height>
							<font>font35_title</font>
							<align>center</align>
							<label>$INFO[ListItem.Top250]</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>135</left>
							<top>5</top>
							<width>35</width>
							<height>70</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<top>3</top>
							<left>135</left>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<top>3</top>
							<left>170</left>
							<right>80</right>
							<height>70</height>
							<font>font30</font>
							<label>$VAR[ListMainLabelVar]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>135</left>
							<top>52</top>
							<right>80</right>
							<height>60</height>
							<label>$VAR[ListSubLabelVar]</label>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="800" />
							<param name="OverlayListTop" value="28" />
						</include>
					</focusedlayout>
					<itemlayout height="60" width="870" condition="Skin.HasSetting(Enable.2ColumnList) + Skin.HasSetting(Enable.SlimList)">
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>20</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>55</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="800" />
							<param name="OverlayListTop" value="0" />
						</include>
					</itemlayout>
					<focusedlayout height="60" width="870" condition="Skin.HasSetting(Enable.2ColumnList) + Skin.HasSetting(Enable.SlimList)">
						<control type="label">
							<visible>ListItem.IsPlaying + !Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>I</label>
						</control>
						<control type="label">
							<visible>ListItem.IsPlaying + Player.Paused</visible>
							<left>20</left>
							<width>35</width>
							<height>60</height>
							<font>IconTiny</font>
							<label>K</label>
						</control>
						<control type="label">
							<left>20</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>!ListItem.IsPlaying</visible>
						</control>
						<control type="label">
							<left>55</left>
							<right>80</right>
							<height>60</height>
							<font>font15</font>
							<label>$INFO[ListItem.Label]</label>
							<visible>ListItem.IsPlaying</visible>
						</control>
						<include content="OverlayList">
							<param name="OverlayListLeft" value="800" />
							<param name="OverlayListTop" value="0" />
						</include>
					</focusedlayout>
				</control>
			</control>
			<control type="group">
				<visible>Control.IsVisible(50) + !Skin.HasSetting(Enable.WideList) + !Skin.HasSetting(Enable.2ColumnList)</visible>
				<top>165</top>
				<control type="grouplist">
					<left>1156</left>
					<width>680</width>

					<!-- We have a special rendering for music -->
					<include file="Includes_InfoSideView.xml" condition="Window.IsVisible(MyMusicNav.xml)" content="MusicInfoSide"/>

					<!-- otherwise, use video logic for everything else -->
					<include file="Includes_InfoSideView.xml" condition="!Window.IsVisible(MyMusicNav.xml)" content="VideoInfoSide"/>

				</control>


				<!-- <control type="group"> -->
				<!-- <left>1276</left> -->
				<!-- <visible>[$EXP[isMovie] | $EXP[isTvshow] | $EXP[isSeason] | $EXP[isSet] | Container.Content(actors)] + !String.Contains(Container.FolderPath,plugin.video) + -->
				<!-- !String.StartsWith(ListItem.Icon,Default) -->
				<!-- </visible> -->
				<!-- <control type="image"> -->
				<!-- <width>560</width> -->
				<!-- <height>560</height> -->
				<!-- <aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio> -->
				<!-- <texture background="true" diffuse="diffuse/list-poster.png">$VAR[ListIcon]</texture> -->
				<!-- <fadetime>IconCrossfadeTime</fadetime> -->
				<!-- </control> -->

				<!-- </control> -->

				<!-- <control type="group"> -->
				<!-- <left>1276</left> -->
				<!-- <visible>[![$EXP[isMovie] | $EXP[isTvshow] | $EXP[isSeason] | $EXP[isSet] | Container.Content(actors) | Window.IsActive(videoplaylist) | $EXP[isEpisode] | -->
				<!-- Container.Content(addons) | $EXP[isArtist] | $EXP[isAlbum] | $EXP[isSong] | $EXP[isMusicvideo]] | [String.Contains(Container.FolderPath,plugin.video) + !$EXP[isEpisode]]] + -->
				<!-- !String.StartsWith(ListItem.Icon,Default) -->
				<!-- </visible> -->
				<!-- <animation effect="slide" start="0,0" end="0,15" time="0" tween="cubic" easing="inout" condition="$EXP[PluginAdvancedLauncher]">Conditional</animation> -->
				<!-- <control type="image"> -->
				<!-- <width>560</width> -->
				<!-- <height>560</height> -->
				<!-- <aspectratio align="center" aligny="top">keep</aspectratio> -->
				<!-- <texture background="true">$VAR[ListIcon]</texture> -->
				<!-- <fadetime>IconCrossfadeTime</fadetime> -->
				<!-- </control> -->
				<!-- </control> -->

				<!-- <control type="group"> -->
				<!-- <left>1276</left> -->
				<!-- <visible>[Container.Content(addons) | $EXP[isArtist] | $EXP[isAlbum] | $EXP[isSong] | $EXP[isMusicvideo] | Container.Content(studios)] | -->
				<!-- String.StartsWith(ListItem.Icon,Default) -->
				<!-- </visible> -->
				<!-- <animation effect="slide" time="0" start="0,0" end="0,15" condition="Window.IsActive(programs) | Window.IsActive(addonbrowser)">Conditional</animation> -->
				<!-- <control type="image"> -->
				<!-- <visible>!$EXP[externalGenreIcon]+String.StartsWith(ListItem.Icon,Default) | Container.Content(countries)</visible> -->
				<!-- <width>560</width> -->
				<!-- <height>560</height> -->
				<!-- <texture colordiffuse="33000000" border="5">listselect_fo.png</texture> -->
				<!-- </control> -->
				<!-- <control type="grouplist"> -->
				<!-- <itemgap>15</itemgap> -->
				<!-- <control type="group"> -->
				<!-- <width>560</width> -->
				<!-- <height>560</height> -->
				<!-- <visible>!$EXP[externalGenreIcon]+!Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible> -->
				<!-- <control type="image"> -->
				<!-- <width>560</width> -->
				<!-- <height>560</height> -->
				<!-- <aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio> -->
				<!-- <texture background="true" diffuse="diffuse/list-square.png" fallback="DefaultFolder.png">$VAR[ThumbViewImage]</texture> -->
				<!-- <fadetime>IconCrossfadeTime</fadetime> -->
				<!-- </control> -->
				<!-- <control type="image"> -->
				<!-- <visible>$EXP[isSong] | $EXP[isAlbum]</visible> -->
				<!-- <left>5</left> -->
				<!-- <top>5</top> -->
				<!-- <width>130</width> -->
				<!-- <height>50</height> -->
				<!-- <aspectratio align="center" aligny="center">keep</aspectratio> -->
				<!-- <texture>$VAR[AudioSourceFlagVar,flags/source/,.png]</texture> -->
				<!-- </control> -->
				<!-- </control> -->

				<!-- <control type="image"> -->
				<!-- <visible>Container.Content(addons)</visible> -->
				<!-- <width>560</width> -->
				<!-- <height>560</height> -->
				<!-- <aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio> -->
				<!-- <texture background="true" diffuse="diffuse/list-square.png">$VAR[ListIcon]</texture> -->
				<!-- <fadetime>IconCrossfadeTime</fadetime> -->
				<!-- </control> -->

				<!-- <include content="external-genre-icon"> -->
				<!-- <param name="width" value="560" /> -->
				<!-- <param name="height" value="560" /> -->
				<!-- </include> -->



				<!-- <control type="label"> -->
				<!-- <visible>$EXP[isSong] + !String.IsEmpty(ListItem.Album)</visible> -->
				<!-- <width>560</width> -->
				<!-- <height>30</height> -->
				<!-- <font>font14</font> -->
				<!-- <textcolor>highlight</textcolor> -->
				<!-- <label>$LOCALIZE[558]:</label> -->
				<!-- </control> -->
				<!-- <control type="label"> -->
				<!-- <visible>$EXP[isSong] + !String.IsEmpty(ListItem.Album)</visible> -->
				<!-- <width>560</width> -->
				<!-- <height>30</height> -->
				<!-- <font>font14</font> -->
				<!-- <label>$INFO[ListItem.Album]$INFO[ListItem.Year, (,)]</label> -->
				<!-- </control> -->

				<!-- <control type="label"> -->
				<!-- <visible>$EXP[isSong] + !String.IsEmpty(ListItem.Genre)</visible> -->
				<!-- <width>560</width> -->
				<!-- <height>30</height> -->
				<!-- <font>font14</font> -->
				<!-- <textcolor>highlight</textcolor> -->
				<!-- <label>$LOCALIZE[515]:</label> -->
				<!-- </control> -->
				<!-- <control type="label"> -->
				<!-- <visible>$EXP[isSong] + !String.IsEmpty(ListItem.Genre)</visible> -->
				<!-- <width>560</width> -->
				<!-- <height>30</height> -->
				<!-- <font>font14</font> -->
				<!-- <label>$INFO[ListItem.Genre]</label> -->
				<!-- </control> -->

				<!-- <control type="grouplist"> -->
				<!-- <itemgap>10</itemgap> -->
				<!-- <orientation>horizontal</orientation> -->

				<!-- <control type="image"> -->
				<!-- <visible>$EXP[isSong]</visible> -->
				<!-- <width>560</width> -->
				<!-- <height>60</height> -->
				<!-- <include>MediaFlagVars</include> -->
				<!-- <texture background="true" colordiffuse="maintext">$INFO[ListItem.FileExtension,flags/audiocodec/,.png]</texture> -->
				<!-- </control> -->
				<!-- </control> -->

				<!-- <control type="textbox"> -->
				<!-- <visible>$EXP[isMusicvideo]</visible> -->
				<!-- <description>Description</description> -->
				<!-- <width>560</width> -->
				<!-- <height>220</height> -->
				<!-- <font>font14_textbox</font> -->
				<!-- <label>$INFO[ListItem.Plot]</label> -->
				<!-- <include>AutoscrollDefault</include> -->
				<!-- </control> -->
				<!-- <control type="textbox"> -->
				<!-- <visible>$EXP[isArtist] | $EXP[isAlbum]</visible> -->
				<!-- <label>$VAR[MusicPlotVar]</label> -->
				<!-- <width>560</width> -->
				<!-- <height>275</height> -->
				<!-- <font>font14_textbox</font> -->
				<!-- <include>AutoscrollDefault</include> -->
				<!-- <include>InfoPanelButtonsValues</include> -->
				<!-- </control> -->
				<!-- <control type="textbox"> -->
				<!-- <visible>!String.IsEmpty(ListItem.AddonDescription)</visible> -->
				<!-- <description>Description</description> -->
				<!-- <width>560</width> -->
				<!-- <height>275</height> -->
				<!-- <font>font14_textbox</font> -->
				<!-- <label>$INFO[ListItem.AddonDescription]</label> -->
				<!-- <include>AutoscrollDefault</include> -->
				<!-- </control> -->
				<!-- </control> -->
				<!-- </control> -->
			</control>
		</control>
		<control type="group">
			<visible>Control.IsVisible(50) + !$EXP[isInfoDialog]</visible>
			<animation effect="slide" time="0" start="0,0" end="0,-15"
				condition="Window.IsActive(videos) | Window.IsActive(music) | Window.IsActive(musicplaylist) | Window.IsActive(pictures)">Conditional</animation>
			<include>Scrollbar_Vertical</include>
		</control>
	</include>
</includes>