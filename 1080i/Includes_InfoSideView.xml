<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<!-- Container.Content (video) genres movies sets tvshows seasons episodes years actors directors studios tags musicvideos albums artists albums -->
	<!-- ListItem.DBTYPE (video) movie set tag genre tvshow season episode musicvideo album actor -->


	<include name="MusicInfoSide">
		<control type="grouplist">
			<animation effect="slide" time="300" tween="sine" easing="inout" start="0" end="-25" condition="Skin.HasSetting(InfoWall.Banners)">Conditional</animation>
			<itemgap>15</itemgap>


			<control type="group">
				<description>call genre icon include if we want a genre icon</description>
				<width>680</width>
				<height>680</height>
				<visible>String.IsEqual(Control.GetLabel(360),genreicon)</visible>
				<include content="external-genre-icon">
					<param name="width" value="680" />
					<param name="height" value="680" />
				</include>
			</control>

			<control type="group">
				<height>384</height>
				<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>

				<control type="image">
					<width>680</width>
					<height>384</height>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<texture background="true" diffuse="diffuse/infowall-fanart.png">$INFO[ListItem.Art(fanart)]</texture>
					<fadetime>400</fadetime>
					<visible>!String.IsEmpty(ListItem.Art(fanart))</visible>
				</control>
				<control type="image">
					<visible>$EXP[isSong] | $EXP[isAlbum]</visible>
					<left>5</left>
					<top>5</top>
					<width>130</width>
					<height>50</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>$VAR[AudioSourceFlagVar,flags/source/,.png]</texture>
				</control>
			</control>

			<control type="label" id="360">
				<description>Hidden object to store Art2Setting so that other objects can access it for comparisons</description>
				<label>$VAR[Art2Setting]</label>
				<visible>false</visible>
				<width>680</width>
				<height>40</height>
				<font>font30</font>
			</control>


			<control type="label" id='361'>
				<visible>false</visible>
				<label>$VAR[AudioSourceFlagVar]</label>
			</control>
			<control type="grouplist">
				<height>50</height>
				<itemgap>5</itemgap>
				<width>680</width>
				<orientation>horizontal</orientation>

				<control type="image">
					<!-- <visible>String.IsEmpty(ListItem.Art(fanart)) +[$EXP[isSong] | $EXP[isAlbum]]</visible> -->
					<visible>
						!String.IsEmpty(Control.GetLabel(361))
						+String.IsEmpty(ListItem.Art(fanart))
						+[$EXP[isSong] | $EXP[isAlbum]]
					</visible>
					<width>120</width>
					<height>50</height>
					<aspectratio align="center" aligny="center">keep</aspectratio>
					<texture>$VAR[AudioSourceFlagVar,flags/source/,.png]</texture>
				</control>

				<control type="image">
					<visible>$EXP[isSong]</visible>
					<width>120</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="maintext">$INFO[ListItem.FileExtension,flags/audiocodec/,.png]</texture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.MusicChannels)</visible>
					<width>120</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="maintext">$INFO[ListItem.MusicChannels,flags/audiochannel/,.png]</texture>
				</control>
				<control type="image">
					<visible>!String.IsEmpty(ListItem.Codec)</visible>
					<width>120</width>
					<height>50</height>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="maintext">$INFO[ListItem.Codec,flags/audiocodec/,.png]</texture>
				</control>
				<control type="image">
					<height>50</height>
					<width>120</width>
					<aspectratio>keep</aspectratio>
					<texture background="true" colordiffuse="maintext">$VAR[AudioPlayerSourceFlagVar,flags/source/,.png]</texture>
				</control>
			</control>


			<control type="label">
				<height>20</height>
				<font>font12</font>
				<align>left</align>
				<shadowcolor>FF000000</shadowcolor>
				<label>$INFO[ListItem.MusicChannels,,ch]$INFO[ListItem.BitsPerSample, ,bit]$INFO[ListItem.Samplerate, ,kHz]
				</label>
			</control>
			<control type="label">
				<height>20</height>
				<font>font12</font>
				<align>left</align>
				<shadowcolor>FF000000</shadowcolor>
				<label>$INFO[ListItem.MusicCodec,,]$INFO[ListItem.Bitrate, ,kbps]
				</label>
			</control>


			<control type="label">
				<visible>Container.Content(albums)</visible>
				<width>680</width>
				<height>40</height>
				<font>font30</font>
				<aligny>bottom</aligny>
				<scroll>true</scroll>
				<label>$INFO[ListItem.Album]$INFO[ListItem.Year, (,)]</label>
			</control>
			<control type="label">
				<visible>Container.Content(artists)</visible>
				<width>680</width>
				<height>40</height>
				<font>font30</font>
				<aligny>bottom</aligny>
				<scroll>true</scroll>
				<label>$VAR[FloorLabelVar]</label>
			</control>
			<control type="label">
				<label>$INFO[ListItem.Artist]</label>
				<width>680</width>
				<height>42</height>
				<aligny>top</aligny>
				<font>font14</font>
				<textcolor>highlight</textcolor>
				<visible>Container.Content(albums)</visible>
			</control>

			<control type="label">
				<label>$INFO[ListItem.Property(Artist_Genre)]</label>
				<width>680</width>
				<height>42</height>
				<font>font14</font>
				<aligny>top</aligny>
				<textcolor>highlight</textcolor>
				<visible>Container.Content(artists)</visible>
			</control>
			<control type="textbox">
				<label>$VAR[MusicPlotVar]</label>
				<width>680</width>
				<height>270</height>
				<font>font14_textbox</font>
				<autoscroll delay="5000" time="3000" repeat="5000">true</autoscroll>
			</control>
		</control>
	</include>

	<include name="VideoInfoSide">
		<control type="grouplist">
			<animation effect="slide" time="300" tween="sine" easing="inout" start="0" end="-25" condition="Skin.HasSetting(InfoWall.Banners)">Conditional</animation>
			<itemgap>15</itemgap>

			<control type="multiimage">
				<description>Image when landscape or fanart (scaled landscape)</description>
				<visible>
					String.IsEqual(Control.GetLabel(360),landscape)
					| String.IsEqual(Control.GetLabel(360),fanart)
					| String.IsEmpty(Control.GetLabel(360))
				</visible>
				<width>680</width>
				<height>384</height>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<imagepath background="true" diffuse="diffuse/infowall-fanart.png">$VAR[Art2Image]</imagepath>
			</control>

			<control type="multiimage">
				<description>Image when Banner</description>
				<visible>
					String.IsEqual(Control.GetLabel(360),banner)
				</visible>
				<width>680</width>
				<height>130</height>
				<aspectratio scalediffuse="false">Keep</aspectratio>
				<imagepath background="true" diffuse="diffuse/infowall-fanart.png">$VAR[Art2Image]</imagepath>
			</control>


			<control type="multiimage">
				<description>Image when Thumb or Logo view (landscape shrink to fit)</description>
				<visible>
					String.IsEqual(Control.GetLabel(360),thumb)
					| String.IsEqual(Control.GetLabel(360),logo)
				</visible>

				<width>680</width>
				<height>384</height>
				<aspectratio scalediffuse="false">Keep</aspectratio>
				<imagepath background="true" diffuse="diffuse/infowall-fanart.png">$VAR[Art2Image]</imagepath>
			</control>

			<control type="multiimage">
				<description>Image when Poster View (Tall shrink to fit)</description>
				<visible>
					String.IsEqual(Control.GetLabel(360),poster)
				</visible>
				<width>680</width>
				<height>680</height>
				<aspectratio scalediffuse="false">keep</aspectratio>
				<imagepath background="true" diffuse="diffuse/infowall-fanart.png">$VAR[Art2Image]</imagepath>
			</control>

			<control type="group">
				<description>call genre icon include if we want a genre icon</description>
				<width>680</width>
				<height>680</height>
				<visible>String.IsEqual(Control.GetLabel(360),genreicon)</visible>
				<include content="external-genre-icon">
					<param name="width" value="680" />
					<param name="height" value="680" />
				</include>
			</control>

			<control type="label" id="360">
				<description>Hidden object to store Art2Setting so that other objects can access it for comparisons</description>
				<label>$VAR[Art2Setting]</label>
				<visible>false</visible>
				<width>680</width>
				<height>40</height>
				<font>font30</font>
			</control>

			<control type="label">
				<width>680</width>
				<height>40</height>
				<font>font30</font>
				<scroll>true</scroll>
				<aligny>bottom</aligny>
				<label>$VAR[FloorLabelVar]</label>
			</control>
			<control type="label">
				<label>$VAR[InfoWallSubLabelVar]</label>
				<width>680</width>
				<height>42</height>
				<font>font14</font>
				<aligny>top</aligny>
				<textcolor>highlight</textcolor>
			</control>
			<control type="textbox">
				<visible>!String.IsEmpty(ListItem.AddonDescription)</visible>
				<description>Description</description>
				<width>680</width>
				<height>275</height>
				<font>font14_textbox</font>
				<label>$INFO[ListItem.AddonDescription]</label>
				<include>AutoscrollDefault</include>
			</control>
			<control type="textbox">
				<visible>
					!String.IsEqual(Control.GetLabel(360),poster)
					+ !String.IsEqual(Control.GetLabel(360),genreicon)
				</visible>

				<label>$VAR[VideoPlotVar]</label>
				<width>680</width>
				<height>300</height>
				<font>font14_textbox</font>
				<autoscroll delay="5000" time="3000" repeat="5000">true</autoscroll>
			</control>

			<!-- <control type="group"> -->
			<!-- <width>560</width> -->
			<!-- <height>560</height> -->
			<!-- <visible>!$EXP[externalGenreIcon]+!Container.Content(addons) + !String.IsEqual(Container.Content,sources)</visible> -->
			<!-- <control type="image"> -->
			<!-- <width>560</width> -->
			<!-- <height>560</height> -->
			<!-- <aspectratio align="center" aligny="center" scalediffuse="false">keep</aspectratio> -->
			<!-- <texture background="true" diffuse="diffuse/list-square.png" fallback="DefaultFolder.png">$VAR[ThumbViewImage]</texture> -->
			<!-- <fadetime>IconCrossfadeTime</fadetime> -->
			<!-- </control> -->


		</control>
	</include>

</includes>